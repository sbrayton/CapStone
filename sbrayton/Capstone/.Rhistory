#put it back into the proper matrix and reverse the gather
df<-spread(df, key = ballhandler_id, value = percOfTot)
DataLng <- gather(db_2017, ballhandler, tot,2:4, factor_key=TRUE)
for (player in DataLng){
DataLng$percOfTot <- (DataLng$tot/DataLng$`Total Access`)
}
df<-  DataLng
#put it back into the proper matrix and reverse the gather
df<-spread(df, key = ballhandler, value = percOfTot)
aLng <- gather(db_2017, ballhandler, tot,2:4, factor_key=TRUE)
for (player in DataLng){
DataLng$percOfTot <- (DataLng$tot/DataLng$`Total Access`)
}
df<-  DataLng
df$Spend<-NULL
head(df)
#put it back into the proper matrix and reverse the gather
df<-spread(df, key = ballhandler, value = tot)
DataLng <- gather(db_2017, ballhandler, tot,2:4, factor_key=TRUE)
DataLng <- db_2017
for (player in DataLng){
DataLng$percOfTot <- ((sum(DataLng$True + DataLng$False + DataLng$NA))/DataLng$`Total Access`)
for (player in DataLng){
((sum(DataLng$True + DataLng$False + DataLng$NA))/DataLng$`Total Access`)
str(DataLng)
DataLng[is.na(DataLng)] <- 0
for (player in DataLng){
DataLng$percOfTot <- ((sum(DataLng$True + DataLng$False + DataLng$NA))/DataLng$`Total Access`)
sum(DataLng$True + DataLng$False + DataLng$NA
sum(DataLng$True + DataLng$False + DataLng$'NA'
sum(DataLng$True + DataLng$False + DataLng$'NA')
sum(DataLng$True,DataLng$False,DataLng$'NA')
for (player in DataLng){
DataLng$percOfTot <- ((sum(DataLng$True,DataLng$False,DataLng$'NA'))/DataLng$`Total Access`)
}
for (player in DataLng){
DataLng$percOfTot <- ((sum(DataLng$True,DataLng$False,DataLng$'NA')))
}
for (player in DataLng){
DataLng$percOfTot <- ((sum(DataLng$True[player],DataLng$False[player],DataLng$'NA'[player])))
}
DataLng <- db_2017
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- DataLng$True + DataLng$False
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
DataLng$percOfTot <- (DataLng$True + DataLng$False + DataLng$'NA' )/(DataLng$`Total Access`)
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$'NA'  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
setwd("/Users/shamekabrayton/Dropbox/NYU/02_Module/07_Data Decision Data Making/Exam")
pacman::p_load(DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
#setting up the connection string to the database
mySqlCreds <- list(dbhostname = "52.203.27.250",
dbname   = "blownAway",
username = "BlownAway",
pass = "blownAway123!",
port = 3306
)
drv <- dbDriver("MySQL")
#pull data from the table into a variable
#connection string to the database
con<-dbConnect(drv, host=mySqlCreds$dbhostname, dbname=mySqlCreds$dbname,
user=mySqlCreds$username, password=mySqlCreds$pass, port = mySqlCreds$port)
#connect to database and pull query into a table
db_2017 <- tbl(con ,sql("
select b.ballhandler_id
,`False`
,`True`
,`NA`
,`Total Access`
from `blownAway`.`yr_2017` as b
left join (
select   ballhandler_id,count(*) as `False` from `blownAway`.`yr_2017`
where shot_result='False' 	group by ballhandler_id
)f on f.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `True` from `blownAway`.`yr_2017`
where shot_result='True' 	group by ballhandler_id
)t on t.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `NA` from `blownAway`.`yr_2017`
where shot_result='NA' 	group by ballhandler_id
)na   on na.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*)as `Total Access` from `blownAway`.`yr_2017` 	group by ballhandler_id
)a on a.ballhandler_id = b.ballhandler_id
group by b.ballhandler_id,`False`,`True`,`NA` ,`Total Access`                        "))
#alter the table to a dataframe
db_2017<- as.data.frame(db_2017)
DataLng <- db_2017
str(DataLng)
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
sum(DataLng$True,DataLng$False,DataLng$'NA')
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
shoot <- tbl(con ,sql("select * from blownAway.yr_2017"))
shoot<-as.data.frame(shoot)
offense <- as.data.frame(cbind(chance_id=(shoot$chance_id),
ballhandler_id=(shoot$ballhandler_id),
defender_id=(shoot$defender_id),
start_shot_clock=(shoot$start_shot_clock),
basket_distance=(shoot$basket_distance),
led_to_shot=(shoot$let_to_shot),
shot_result=(shoot$shot_result)
))
offense <- na.omit(offense)
offense$shot_result_num <- as.numeric(offense$shot_result)
offense$shot_result_num[offense$shot_result_num==1] <- 0
offense$shot_result_num[offense$shot_result_num==2] <- 1
rm(shoot)
sp<-offense%>%
group_by(ballhandler_id)%>%
summarise(shot_percentage=mean(shot_result_num))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
setwd("/Users/shamekabrayton/Dropbox/NYU/02_Module/07_Data Decision Data Making/Exam")
pacman::p_load(DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
#setting up the connection string to the database
mySqlCreds <- list(dbhostname = "52.203.27.250",
dbname   = "blownAway",
username = "BlownAway",
pass = "blownAway123!",
port = 3306
)
drv <- dbDriver("MySQL")
#pull data from the table into a variable
#connection string to the database
con<-dbConnect(drv, host=mySqlCreds$dbhostname, dbname=mySqlCreds$dbname,
user=mySqlCreds$username, password=mySqlCreds$pass, port = mySqlCreds$port)
#connect to database and pull query into a table
db_2017 <- tbl(con ,sql("
select b.ballhandler_id
,`False`
,`True`
,`NA`
,`Total Access`
from `blownAway`.`yr_2017` as b
left join (
select   ballhandler_id,count(*) as `False` from `blownAway`.`yr_2017`
where shot_result='False' 	group by ballhandler_id
)f on f.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `True` from `blownAway`.`yr_2017`
where shot_result='True' 	group by ballhandler_id
)t on t.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `NA` from `blownAway`.`yr_2017`
where shot_result='NA' 	group by ballhandler_id
)na   on na.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*)as `Total Access` from `blownAway`.`yr_2017` 	group by ballhandler_id
)a on a.ballhandler_id = b.ballhandler_id
group by b.ballhandler_id,`False`,`True`,`NA` ,`Total Access`                        "))
#alter the table to a dataframe
db_2017<- as.data.frame(db_2017)
DataLng <- db_2017
str(DataLng)
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
sum(DataLng$True,DataLng$False,DataLng$'NA')
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
shoot <- tbl(con ,sql("select * from blownAway.yr_2017"))
shoot<-as.data.frame(shoot)
View(DataLng)
View(DataLng)
View(DataLng)
offense <- as.data.frame(cbind(chance_id=(shoot$chance_id),
ballhandler_id=(shoot$ballhandler_id),
defender_id=(shoot$defender_id),
start_shot_clock=(shoot$start_shot_clock),
basket_distance=(shoot$basket_distance),
led_to_shot=(shoot$let_to_shot),
shot_result=(shoot$shot_result)
))
offense <- na.omit(offense)
offense$shot_result_num <- as.numeric(offense$shot_result)
offense$shot_result_num[offense$shot_result_num==1] <- 0
offense$shot_result_num[offense$shot_result_num==2] <- 1
rm(shoot)
sp<-offense%>%
group_by(ballhandler_id)%>%
summarise(shot_percentage=mean(shot_result_num))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
setwd("/Users/shamekabrayton/Dropbox/NYU/02_Module/07_Data Decision Data Making/Exam")
pacman::p_load(DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
#setting up the connection string to the database
mySqlCreds <- list(dbhostname = "52.203.27.250",
dbname   = "blownAway",
username = "BlownAway",
pass = "blownAway123!",
port = 3306
)
drv <- dbDriver("MySQL")
#pull data from the table into a variable
#connection string to the database
con<-dbConnect(drv, host=mySqlCreds$dbhostname, dbname=mySqlCreds$dbname,
user=mySqlCreds$username, password=mySqlCreds$pass, port = mySqlCreds$port)
#connect to database and pull query into a table
db_2017 <- tbl(con ,sql("
select b.ballhandler_id
,`False`
,`True`
,`NA`
,`Total Access`
from `blownAway`.`yr_2017` as b
left join (
select   ballhandler_id,count(*) as `False` from `blownAway`.`yr_2017`
where shot_result='False' 	group by ballhandler_id
)f on f.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `True` from `blownAway`.`yr_2017`
where shot_result='True' 	group by ballhandler_id
)t on t.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `NA` from `blownAway`.`yr_2017`
where shot_result='NA' 	group by ballhandler_id
)na   on na.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*)as `Total Access` from `blownAway`.`yr_2017` 	group by ballhandler_id
)a on a.ballhandler_id = b.ballhandler_id
group by b.ballhandler_id,`False`,`True`,`NA` ,`Total Access`                        "))
#alter the table to a dataframe
db_2017<- as.data.frame(db_2017)
DataLng <- db_2017
str(DataLng)
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
shoot <- tbl(con ,sql("select * from blownAway.yr_2017"))
shoot<-as.data.frame(shoot)
offense <- as.data.frame(cbind(chance_id=(shoot$chance_id),
ballhandler_id=(shoot$ballhandler_id),
defender_id=(shoot$defender_id),
start_shot_clock=(shoot$start_shot_clock),
basket_distance=(shoot$basket_distance),
led_to_shot=(shoot$let_to_shot),
shot_result=(shoot$shot_result)
))
offense <- na.omit(offense)
offense$shot_result_num <- as.numeric(offense$shot_result)
offense$shot_result_num[offense$shot_result_num==1] <- 0
offense$shot_result_num[offense$shot_result_num==2] <- 1
rm(shoot)
sp<-offense%>%
group_by(ballhandler_id)%>%
summarise(shot_percentage=mean(shot_result_num))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
setwd("/Users/shamekabrayton/Dropbox/NYU/02_Module/07_Data Decision Data Making/Exam")
pacman::p_load(DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
#setting up the connection string to the database
mySqlCreds <- list(dbhostname = "52.203.27.250",
dbname   = "blownAway",
username = "BlownAway",
pass = "blownAway123!",
port = 3306
)
drv <- dbDriver("MySQL")
#pull data from the table into a variable
#connection string to the database
con<-dbConnect(drv, host=mySqlCreds$dbhostname, dbname=mySqlCreds$dbname,
user=mySqlCreds$username, password=mySqlCreds$pass, port = mySqlCreds$port)
#connect to database and pull query into a table
db_2017 <- tbl(con ,sql("
select b.ballhandler_id
,`False`
,`True`
,`NA`
,`Total Access`
from `blownAway`.`yr_2017` as b
left join (
select   ballhandler_id,count(*) as `False` from `blownAway`.`yr_2017`
where shot_result='False' 	group by ballhandler_id
)f on f.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `True` from `blownAway`.`yr_2017`
where shot_result='True' 	group by ballhandler_id
)t on t.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `NA` from `blownAway`.`yr_2017`
where shot_result='NA' 	group by ballhandler_id
)na   on na.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*)as `Total Access` from `blownAway`.`yr_2017` 	group by ballhandler_id
)a on a.ballhandler_id = b.ballhandler_id
group by b.ballhandler_id,`False`,`True`,`NA` ,`Total Access`                        "))
#alter the table to a dataframe
db_2017<- as.data.frame(db_2017)
DataLng <- db_2017
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
shoot <- tbl(con ,sql("select * from blownAway.yr_2017"))
shoot<-as.data.frame(shoot)
offense <- as.data.frame(cbind(chance_id=(shoot$chance_id),
ballhandler_id=(shoot$ballhandler_id),
defender_id=(shoot$defender_id),
start_shot_clock=(shoot$start_shot_clock),
basket_distance=(shoot$basket_distance),
led_to_shot=(shoot$let_to_shot),
shot_result=(shoot$shot_result)
))
offense <- na.omit(offense)
offense$shot_result_num <- as.numeric(offense$shot_result)
offense$shot_result_num[offense$shot_result_num==1] <- 0
offense$shot_result_num[offense$shot_result_num==2] <- 1
rm(shoot)
sp<-offense%>%
group_by(ballhandler_id)%>%
summarise(shot_percentage=mean(shot_result_num))
View(DataLng)
df.means.fit <- kmeans(DataLng[,7:9], 3, nstart = 10000) # k = 3
z2 <- augment(df.means.fit, DataLng)
z2
fviz_cluster(df.means.fit, data = DataLng[,7:9])
setwd("~/Dropbox/NYU/02_Module/09_OA/Lesson 07/Final exam")
library(readr)
library(tidyr)
library(broom)
CasinoData <- read_csv("~/Dropbox/NYU/02_Module/09_OA/Lesson 07/Final exam/Casino%2BFinal_Dec%2B2013%2BRaw%2BData_for%2Btest.csv")
CasinoData <- na.omit(CasinoData)
sum(is.na(CasinoData$`Total Spend`))
names(CasinoData)
#need to sort when you run this because it is not sorted by player
CasinoDataLng <- gather(CasinoData, player, Spend,2:8, factor_key=TRUE)
sum(is.na(CasinoDataLng$`Total Spend`))
#
# kclust <- kmeans(CasinoData [, 2:8 ], 6, nstart = 1000)
#
#  z <- augment(kclust, CasinoData)
#
# library(cluster)
# clusplot(kclust, main='2D representation of the Cluster solution',
#          color=TRUE, shade=TRUE,
#          labels=2, lines=0)
#
#
# plot(z$.cluster)
# kclust
# z
#
# r <- subset(z, .cluster==6 ,select = c(.cluster))
m <- as.matrix(CasinoDataLng$Spend)
m[m>0] <- 1
CasinoDataLng$Spend<-m
CasinoDataLng$Spend<-as.factor(CasinoDataLng$Spend)
newData<- cbind(CasinoDataLng$Player.No, CasinoDataLng$player,CasinoDataLng$Spend)
sham<-CasinoData
# df<-subset(CasinoData, CasinoData$Player.No == "Player 1")
for (player in CasinoDataLng){
CasinoDataLng$perc<- (CasinoDataLng$Spend/CasinoDataLng$`Total Spend`)
}
df<- CasinoDataLng
df$Spend<-NULL
head(df)
#put it back into the proper matrix and reverse the gather
df<-spread(df, key = player, value = perc)
head(df)
df.means.fit <- kmeans(df[,3:9], 6, nstart = 10000) # k = 3
library(cluster)
fviz_cluster(df.means.fit, data = DataLng[,7:9])
library("FactoMineR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("factoextra", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("FactoInvestigate", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("Factoshiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
fviz_cluster(df.means.fit, data = DataLng[,7:9])
df.means.fit
fviz_cluster(df.means.fit, data = DataLng[,7:9])
df.means.fit
z2
View(z2)
df.means.fit
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, cache = TRUE)
setwd("/Users/shamekabrayton/Dropbox/NYU/02_Module/07_Data Decision Data Making/Exam")
pacman::p_load(cluster,DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
#setting up the connection string to the database
mySqlCreds <- list(dbhostname = "52.203.27.250",
dbname   = "blownAway",
username = "BlownAway",
pass = "blownAway123!",
port = 3306
)
drv <- dbDriver("MySQL")
#pull data from the table into a variable
#connection string to the database
con<-dbConnect(drv, host=mySqlCreds$dbhostname, dbname=mySqlCreds$dbname,
user=mySqlCreds$username, password=mySqlCreds$pass, port = mySqlCreds$port)
#connect to database and pull query into a table
db_2017 <- tbl(con ,sql("
select b.ballhandler_id
,`False`
,`True`
,`NA`
,`Total Access`
from `blownAway`.`yr_2017` as b
left join (
select   ballhandler_id,count(*) as `False` from `blownAway`.`yr_2017`
where shot_result='False' 	group by ballhandler_id
)f on f.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `True` from `blownAway`.`yr_2017`
where shot_result='True' 	group by ballhandler_id
)t on t.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*) as `NA` from `blownAway`.`yr_2017`
where shot_result='NA' 	group by ballhandler_id
)na   on na.ballhandler_id = b.ballhandler_id
left join (
select   ballhandler_id,count(*)as `Total Access` from `blownAway`.`yr_2017` 	group by ballhandler_id
)a on a.ballhandler_id = b.ballhandler_id
group by b.ballhandler_id,`False`,`True`,`NA` ,`Total Access`                        "))
#alter the table to a dataframe
db_2017<- as.data.frame(db_2017)
DataLng <- db_2017
DataLng$True <- as.numeric(DataLng$True)
DataLng$False <- as.numeric(DataLng$False)
DataLng$'NA' <- as.numeric(DataLng$'NA')
DataLng$`Total Access` <- as.numeric(DataLng$`Total Access`)
DataLng[is.na(DataLng)] <- 0
DataLng$percOfTot <- (DataLng$True + DataLng$False )/(DataLng$`Total Access`)
DataLng$percOfTrue <- (DataLng$True  )/(DataLng$`Total Access`)
DataLng$percOfFalse <- (DataLng$False  )/(DataLng$`Total Access`)
DataLng$percOfnoAttempt <- (DataLng$'NA'  )/(DataLng$`Total Access`)
df.means.fit <- kmeans(DataLng[,7:9], 3, nstart = 10000) # k = 3
# z <- augment(df.means.fit, CasinoData)
z2 <- augment(df.means.fit, DataLng)
fviz_cluster(df.means.fit, data = DataLng[,7:9])
df.means.fit
shoot <- tbl(con ,sql("select * from blownAway.yr_2017"))
shoot<-as.data.frame(shoot)
offense <- as.data.frame(cbind(chance_id=(shoot$chance_id),
ballhandler_id=(shoot$ballhandler_id),
defender_id=(shoot$defender_id),
start_shot_clock=(shoot$start_shot_clock),
basket_distance=(shoot$basket_distance),
led_to_shot=(shoot$let_to_shot),
shot_result=(shoot$shot_result)
))
offense <- na.omit(offense)
offense$shot_result_num <- as.numeric(offense$shot_result)
offense$shot_result_num[offense$shot_result_num==1] <- 0
offense$shot_result_num[offense$shot_result_num==2] <- 1
rm(shoot)
sp<-offense%>%
group_by(ballhandler_id)%>%
summarise(shot_percentage=mean(shot_result_num))
runApp('Dropbox/NYU/__Git/sbrayton/Capstone')
runApp('Dropbox/NYU/__Git/sbrayton/Capstone')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
pacman::p_load(cluster,DBI,rJava,tidyr,RJDBC,RMySQL, ggplot2,  reader, forcats, DT, broom, tidyverse, shiny, dplyr,dbplyr,stringr, sjPlot, sjmisc, questionr, stargazer, rio, ggeffects, FSelector)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
